{"ast":null,"code":"var _jsxFileName = \"/Users/tamarauber/Desktop/Google-Book/src/Components/BookCase.js\";\nimport React, { Component } from \"react\";\nimport Shelf from \"./Shelf\";\nimport SearchButton from \"./SearchButton\";\nimport MainTitle from \"./MainTitle\";\n\nclass BookCase extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.componentDidMount = () => {\n      this.props.onRefreshBooks();\n    };\n\n    this.shelfUpdater = () => {\n      const shelfCurrent = {\n        name: \"Currently Reading\",\n        books: this.props.books.filter(book => book.shelf === \"currentlyReading\")\n      };\n      const shelfWant = {\n        name: \"Want to Read\",\n        books: this.props.books.filter(book => book.shelf === \"wantToRead\")\n      };\n      const shelfRead = {\n        name: \"Read\",\n        books: this.props.books.filter(book => book.shelf === \"read\")\n      };\n      return [shelfCurrent, shelfWant, shelfRead];\n    };\n  }\n\n  render() {\n    let allShelves = [];\n    if (this.props.books && this.props.books.length) allShelves = this.shelfUpdater();\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(MainTitle, {\n      title: \"MyReads\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"list-books-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, allShelves && allShelves.map(shelf => React.createElement(Shelf, {\n      key: shelf.name,\n      shelf: shelf,\n      onChangeShelf: this.props.onChangeShelf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })))), React.createElement(SearchButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BookCase;","map":{"version":3,"sources":["/Users/tamarauber/Desktop/Google-Book/src/Components/BookCase.js"],"names":["React","Component","Shelf","SearchButton","MainTitle","BookCase","state","componentDidMount","props","onRefreshBooks","shelfUpdater","shelfCurrent","name","books","filter","book","shelf","shelfWant","shelfRead","render","allShelves","length","map","onChangeShelf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BK,KAD+B,GACvB,EADuB;;AAAA,SAG/BC,iBAH+B,GAGX,MAAM;AACxB,WAAKC,KAAL,CAAWC,cAAX;AACD,KAL8B;;AAAA,SAO/BC,YAP+B,GAOhB,MAAM;AACnB,YAAMC,YAAY,GAAG;AACnBC,QAAAA,IAAI,EAAE,mBADa;AAEnBC,QAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAe,kBAA/C;AAFY,OAArB;AAIA,YAAMC,SAAS,GAAG;AAChBL,QAAAA,IAAI,EAAE,cADU;AAEhBC,QAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAe,YAA/C;AAFS,OAAlB;AAIA,YAAME,SAAS,GAAG;AAChBN,QAAAA,IAAI,EAAE,MADU;AAEhBC,QAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAe,MAA/C;AAFS,OAAlB;AAKA,aAAO,CAACL,YAAD,EAAeM,SAAf,EAA0BC,SAA1B,CAAP;AACD,KAtB8B;AAAA;;AAwB/BC,EAAAA,MAAM,GAAG;AACP,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAI,KAAKZ,KAAL,CAAWK,KAAX,IAAoB,KAAKL,KAAL,CAAWK,KAAX,CAAiBQ,MAAzC,EACED,UAAU,GAAG,KAAKV,YAAL,EAAb;AACF,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGU,UAAU,IACTA,UAAU,CAACE,GAAX,CAAeN,KAAK,IAClB,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACJ,IADb;AAEE,MAAA,KAAK,EAAEI,KAFT;AAGE,MAAA,aAAa,EAAE,KAAKR,KAAL,CAAWe,aAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CADF,CAFF,EAcE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CADF;AAkBD;;AA9C8B;;AAiDjC,eAAelB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Shelf from \"./Shelf\";\nimport SearchButton from \"./SearchButton\";\nimport MainTitle from \"./MainTitle\";\n\nclass BookCase extends Component {\n  state = {};\n\n  componentDidMount = () => {\n    this.props.onRefreshBooks();\n  };\n// This is the method to update information on individual shelves \n  shelfUpdater = () => {\n    const shelfCurrent = {\n      name: \"Currently Reading\",\n      books: this.props.books.filter(book => book.shelf === \"currentlyReading\")\n    };\n    const shelfWant = {\n      name: \"Want to Read\",\n      books: this.props.books.filter(book => book.shelf === \"wantToRead\")\n    };\n    const shelfRead = {\n      name: \"Read\",\n      books: this.props.books.filter(book => book.shelf === \"read\")\n    };\n\n    return [shelfCurrent, shelfWant, shelfRead];\n  };\n\n  render() {\n    let allShelves = [];\n    if (this.props.books && this.props.books.length)\n      allShelves = this.shelfUpdater();\n    return (\n      <div className=\"app\">\n        <MainTitle title=\"MyReads\" />\n        <div className=\"list-books-content\">\n          <div>\n            {allShelves &&\n              allShelves.map(shelf => (\n                <Shelf\n                  key={shelf.name}\n                  shelf={shelf}\n                  onChangeShelf={this.props.onChangeShelf}\n                />\n              ))}\n          </div>\n        </div>\n        <SearchButton />\n      </div>\n    );\n  }\n}\n\nexport default BookCase;\n"]},"metadata":{},"sourceType":"module"}