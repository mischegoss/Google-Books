{"ast":null,"code":"var _jsxFileName = \"/Users/tamarauber/Desktop/Google-Books/src/Components/Search.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport Book from \"./Book\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      query: \"\"\n    };\n\n    this.mergePages = (shelf, search) => {\n      const hashTable = {};\n      shelf.forEach(book => hashTable[book.id] = book.shelf);\n      search.forEach(book => {\n        book.shelf = hashTable[book.id] || \"none\";\n      });\n      return search;\n    };\n\n    this.queryTimer = null;\n\n    this.changeQuery = value => {\n      clearTimeout(this.queryTimer);\n      this.setState({\n        query: value\n      });\n      this.queryTimer = setTimeout(this.updateSearch, 200);\n    };\n\n    this.updateSearch = () => {\n      if (this.state.query === \"\") {\n        this.setState({\n          error: false,\n          books: []\n        });\n        return;\n      }\n\n      BooksAPI.search(this.state.query).then(response => {\n        let newList = [];\n        let newError = false;\n\n        if (response === undefined || response.error && response.error !== \"empty query\") {\n          newError = true;\n        } else if (response.length) {\n          newList = this.mergePages(this.props.selectedBooks, response);\n        }\n\n        this.setState({\n          error: newError,\n          books: newList\n        });\n      });\n    };\n\n    this.componentWillReceiveProps = props => {\n      this.props = props;\n      let newList = (this.props.selectedBooks, this.state.books);\n      this.setState({\n        books: newList\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"search-books\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search-books-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"close-search\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Close\"), React.createElement(\"div\", {\n      className: \"search-books-input-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Search Here\",\n      onChange: e => this.changeQuery(e.target.value),\n      value: this.state.query.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" Search for Results Here \"), React.createElement(\"div\", {\n      className: \"search-books-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.error && React.createElement(\"div\", {\n      className: \"search-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Oh no! Something went wrong\"), !this.state.error && React.createElement(\"span\", {\n      className: \"search-count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"There are \\xA0\", this.state.books.length, \"\\xA0 books that match your search\"), React.createElement(\"ol\", {\n      className: \"books-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.books && this.state.books.map(book => React.createElement(\"li\", {\n      key: book.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Book, {\n      book: book,\n      onChangeShelf: this.props.onChangeShelf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/tamarauber/Desktop/Google-Books/src/Components/Search.js"],"names":["React","Component","Link","BooksAPI","Book","Search","state","books","query","mergePages","shelf","search","hashTable","forEach","book","id","queryTimer","changeQuery","value","clearTimeout","setState","setTimeout","updateSearch","error","then","response","newList","newError","undefined","length","props","selectedBooks","componentWillReceiveProps","render","e","target","map","onChangeShelf"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport Book from \"./Book\";\n\nclass Search extends Component {\n  state = {\n    books: [],\n    query: \"\"\n  };\n\n  mergePages = (shelf, search) => {\n    const hashTable = {};\n    shelf.forEach(book => (hashTable[book.id] = book.shelf));\n    search.forEach(book => {\n      book.shelf = hashTable[book.id] || \"none\";\n    });\n\n    return search;\n  };\n\n  queryTimer = null;\n\n  changeQuery = value => {\n    clearTimeout(this.queryTimer);\n    this.setState({ query: value });\n    this.queryTimer = setTimeout(this.updateSearch, 200);\n  };\n\n  updateSearch = () => {\n    if (this.state.query === \"\") {\n      this.setState({ error: false, books: [] });\n      return;\n    }\n\n    BooksAPI.search(this.state.query).then(response => {\n      let newList = [];\n      let newError = false;\n\n      if (\n        response === undefined ||\n        (response.error && response.error !== \"empty query\")\n      ) {\n        newError = true;\n      } else if (response.length) {\n        newList = this.mergePages(this.props.selectedBooks, response);\n      }\n\n      this.setState({ error: newError, books: newList });\n    });\n  };\n\n  componentWillReceiveProps = props => {\n    this.props = props;\n    let newList = (this.props.selectedBooks, this.state.books);\n    this.setState({ books: newList });\n  };\n\n  render() {\n    return (\n      <div className=\"search-books\">\n        \n        <div className=\"search-books-bar\">\n          <Link className=\"close-search\" to=\"/\">\n            Close\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter Search Here\"\n              onChange={e => this.changeQuery(e.target.value)}\n              value={this.state.query.value}\n            />\n          </div>\n        </div>\n        <div> Search for Results Here </div>\n        <div className=\"search-books-results\">\n          {this.state.error && (\n            <div className=\"search-error\">Oh no! Something went wrong</div>\n          )}\n          {!this.state.error && (\n            <span className=\"search-count\">\n              There are &nbsp;{this.state.books.length}&nbsp; books that match\n              your search\n            </span>\n          )}\n\n          <ol className=\"books-grid\">\n            {this.state.books &&\n              this.state.books.map(book => (\n                <li key={book.id}>\n                  <Book book={book} onChangeShelf={this.props.onChangeShelf} />\n                </li>\n              ))}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n\n\n"]},"metadata":{},"sourceType":"module"}